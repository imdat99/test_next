@use 'sass:map';
// BREAKPOINTS 
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);
:root {
  --background: #ffffff;
  --foreground: #171717;
  --primary: #D70466;
  --secondary: #EE2F66;
  --tertiary: #E61E4D;
  --bg-linear: linear-gradient(to right, #E61E4D 0%, #EE2F66 50%, #D70466 100%), linear-gradient(to right, #E61E4D 0%, #EE2F66 50%, #D70466 100%);
}

// @media (prefers-color-scheme: dark) {
//   :root {
//     --background: #0a0a0a;
//     --foreground: #ededed;
//   }
// }

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: var(--font-lexend);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-grow {
  flex-grow: 1;
}

.flex-shrink {
  flex-shrink: 1;
}
.min-h-screen {
  min-height: 100vh;
}

.container {
  max-width: 100%;
  margin: 0 auto;
}
.img-fluid{height:40px}
/*--------------------------------
  Container
---------------------------------*/
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px
);

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-left: 1rem;
  padding-right: 1rem;

  @each $breakpoint, $breakpoint-width in $grid-breakpoints {
    @if map.has-key($container-max-widths, $breakpoint) {
      @media (min-width: #{$breakpoint-width}) {
        max-width: map.get($container-max-widths, $breakpoint);
      }
    }
  }
}
/*--------------------------------
  Row - column
--------------------------------*/

// TOTAL COLUMNS
$grid-columns: 12;

// Container row
.row {
  display: -ms-flexbox;
  -ms-flex-wrap: wrap;
  display: flex;
  flex-wrap: wrap;
  margin-left: -0.75rem;
  margin-right: -0.75rem;
  &>* {
    flex-shrink: 0;
    width: 100%;
    max-width: 100%;
    padding: calc(0.75rem * 0.5);
    @each $breakpoint, $min-width in $grid-breakpoints {
      @media (min-width: $min-width) {
        @if $breakpoint == 'sm' {
          padding: calc(0.75rem * 0.75);
        } @else if $breakpoint == 'md' {
          padding: calc(0.75rem * 1);
        } @else if $breakpoint == 'lg' {
          padding: calc(0.75rem * 1.25);
        } @else if $breakpoint == 'xl' {
          padding: calc(0.75rem * 1.5);
        } @else if $breakpoint == 'xxl' {
          padding: calc(0.75rem * 1.75);
        }
      }
    }
  }
}

// Column default
[class^="col"] {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  box-sizing: border-box;
}

@each $breakpoint, $min-width in $grid-breakpoints {
  @media (min-width: $min-width) {
    @for $i from 1 through $grid-columns {
      .col-#{$breakpoint}-#{$i} {
        flex: 0 0 calc($i / $grid-columns * 100%);
        max-width: calc($i / $grid-columns * 100%);
      }
    }

    .col-#{$breakpoint}-auto {
      flex: 1 1 auto;
      max-width: 100%;
    }
  }
}

/*--------------------------------
  Margin & Padding Utilities
--------------------------------*/

// Margin & Padding sizes
$spacing-sizes: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 1rem,
  4: 1.5rem,
  5: 3rem
);
.m-auto{margin:auto !important;}
.mx-auto{margin-left:auto !important;margin-right:auto !important;}
.my-auto{margin-top:auto !important;margin-bottom:auto !important;}
.mt-auto{margin-top:auto !important;}
.mb-auto{margin-bottom:auto !important;}
.ml-auto{margin-left:auto !important;}
.mr-auto{margin-right:auto !important;}

// Generate margin and padding utilities for each breakpoint
@each $breakpoint, $min-width in $grid-breakpoints {
  @media (min-width: $min-width) {
    @each $size, $value in $spacing-sizes {
      // Margin
      .m-#{$breakpoint}-#{$size} { margin: $value !important; }
      .mt-#{$breakpoint}-#{$size} { margin-top: $value !important; }
      .mr-#{$breakpoint}-#{$size} { margin-right: $value !important; }
      .mb-#{$breakpoint}-#{$size} { margin-bottom: $value !important; }
      .ml-#{$breakpoint}-#{$size} { margin-left: $value !important; }
      .mx-#{$breakpoint}-#{$size} { 
        margin-left: $value !important;
        margin-right: $value !important;
      }
      .my-#{$breakpoint}-#{$size} { 
        margin-top: $value !important;
        margin-bottom: $value !important;
      }

      // Padding
      .p-#{$breakpoint}-#{$size} { padding: $value !important; }
      .pt-#{$breakpoint}-#{$size} { padding-top: $value !important; }
      .pr-#{$breakpoint}-#{$size} { padding-right: $value !important; }
      .pb-#{$breakpoint}-#{$size} { padding-bottom: $value !important; }
      .pl-#{$breakpoint}-#{$size} { padding-left: $value !important; }
      .px-#{$breakpoint}-#{$size} { 
        padding-left: $value !important;
        padding-right: $value !important;
      }
      .py-#{$breakpoint}-#{$size} { 
        padding-top: $value !important;
        padding-bottom: $value !important;
      }
    }
  }
}
